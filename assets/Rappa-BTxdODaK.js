import{T as f,S as M,A as E,e as d,f as U,q as b,K as V,w as L,a as P}from"./baseOptimizerWorker-D9p07sLo.js";var z=(n,A)=>{const a=f.wrappedFixedT(A).get(null,"conditionals","Characters.Rappa"),{basic:r,skill:_,ult:T,talent:l}=P.SKILL_TALENT_3_ULT_BASIC_5,{SOURCE_BASIC:s,SOURCE_SKILL:u,SOURCE_ULT:m,SOURCE_TALENT:k,SOURCE_TECHNIQUE:N,SOURCE_TRACE:c,SOURCE_MEMO:w,SOURCE_E1:p,SOURCE_E2:G,SOURCE_E4:S,SOURCE_E6:F}=M.character("1317"),I=r(n,1,1.1),h=r(n,2,2.32),R=_(n,1.2,1.32),C=T(n,.3,.34),O=l(n,.6,.66),B=l(n,.5,.55),g=n>=6?15:10,v={teammateBreakVulnerability:.1,e4SpdBuff:!0},x={sealformActive:!0,atkToBreakVulnerability:!0,chargeStacks:n>=6?10:5,e1DefPen:!0,e2Buffs:!0,e4SpdBuff:!0},y={sealformActive:{id:"sealformActive",formItem:"switch",text:a("Content.sealformActive.text"),content:a("Content.sealformActive.content",{ultBeBuff:f.precisionRound(100*C)})},atkToBreakVulnerability:{id:"atkToBreakVulnerability",formItem:"switch",text:a("Content.atkToBreakVulnerability.text"),content:a("Content.atkToBreakVulnerability.content")},chargeStacks:{id:"chargeStacks",formItem:"slider",text:a("Content.chargeStacks.text"),content:a("Content.chargeStacks.content",{talentChargeMultiplier:f.precisionRound(100*B)}),min:0,max:g},e1DefPen:{id:"e1DefPen",formItem:"switch",text:a("Content.e1DefPen.text"),content:a("Content.e1DefPen.content"),disabled:n<1},e2Buffs:{id:"e2Buffs",formItem:"switch",text:a("Content.e2Buffs.text"),content:a("Content.e2Buffs.content"),disabled:n<2},e4SpdBuff:{id:"e4SpdBuff",formItem:"switch",text:a("Content.e4SpdBuff.text"),content:a("Content.e4SpdBuff.content"),disabled:n<4}},D={teammateBreakVulnerability:{id:"teammateBreakVulnerability",formItem:"slider",text:a("TeammateContent.teammateBreakVulnerability.text"),content:a("TeammateContent.teammateBreakVulnerability.content"),min:0,max:.1,percent:!0},e4SpdBuff:{id:"e4SpdBuff",formItem:"switch",text:a("TeammateContent.e4SpdBuff.text"),content:a("TeammateContent.e4SpdBuff.content"),disabled:n<4}};return{activeAbilities:[E.BASIC,E.SKILL],content:()=>Object.values(y),teammateContent:()=>Object.values(D),defaults:()=>x,teammateDefaults:()=>v,initializeConfigurations:(t,i,o)=>{i.characterConditionals.sealformActive&&t.ENEMY_WEAKNESS_BROKEN.config(1,c)},precomputeEffects:(t,i,o)=>{const e=i.characterConditionals;return t.BE.buff(e.sealformActive?C:0,m),t.BREAK_EFFICIENCY_BOOST.buff(e.sealformActive?.5:0,m),t.DEF_PEN.buff(n>=1&&e.sealformActive&&e.e1DefPen?.15:0,p),t.SPD_P.buff(n>=4&&e.sealformActive&&e.e4SpdBuff?.12:0,S),t.BASIC_SUPER_BREAK_MODIFIER.buff(e.sealformActive?.6:0,c),t.BASIC_BREAK_DMG_MODIFIER.set(O+e.chargeStacks*B,k),t.BASIC_ATK_SCALING.buff(e.sealformActive?h:I,s),t.SKILL_ATK_SCALING.buff(R,u),t.BASIC_TOUGHNESS_DMG.buff(e.sealformActive?25+(2+e.chargeStacks):10,s),t.SKILL_TOUGHNESS_DMG.buff(10,u),t},precomputeMutualEffects:(t,i,o)=>{},precomputeTeammateEffects:(t,i,o)=>{const e=i.characterConditionals;d(t,b,e.teammateBreakVulnerability,c,U.TEAM),t.SPD_P.buffTeam(n>=4&&e.e4SpdBuff?.12:0,S)},finalizeCalculations:(t,i,o)=>{i.characterConditionals;const e=Math.floor(f.precisionRound((t.a[V.ATK]-2400)/100)),K=Math.min(.08,Math.max(0,e)*.01)+.02;d(t,b,K,c)},gpuFinalizeCalculations:(t,i)=>{const o=t.characterConditionals;return`
if (${L(o.atkToBreakVulnerability)}) {
  let atkOverStacks: f32 = floor((x.ATK - 2400) / 100);
  let buffValue: f32 = min(0.08, max(0, atkOverStacks) * 0.01) + 0.02;
  
  buffAbilityVulnerability(p_x, BREAK_DMG_TYPE, buffValue, 1);
}
      `}}};export{z as default};
