import{T as h,S as J,d as T,U as B,N as b,A,K as d,e as X,f as x,q as tt,C as et,h as at,i as L,r as nt,s as it,a as lt,b as m}from"./baseOptimizerWorker-D9p07sLo.js";import{b as st,i as ft,g as ot,j as ut}from"./conditionalFinalizers-Dw6EAy4d.js";var dt=(e,O)=>{const i=h.wrappedFixedT(O).get(null,"conditionals","Characters.Lingsha"),s=h.wrappedFixedT(O).get(null,"conditionals","Common.HealAbility"),{basic:N,skill:C,ult:c,talent:E}=lt.ULT_TALENT_3_SKILL_BASIC_5,{SOURCE_BASIC:g,SOURCE_SKILL:u,SOURCE_ULT:f,SOURCE_TALENT:o,SOURCE_TECHNIQUE:rt,SOURCE_TRACE:U,SOURCE_MEMO:ct,SOURCE_E1:I,SOURCE_E2:R,SOURCE_E4:St,SOURCE_E6:_}=J.character("1222"),y=N(e,1,1.1),K=C(e,.8,.88),D=c(e,1.5,1.65),p=c(e,.25,.27),G=E(e,.75,.825),V=C(e,.14,.148),k=C(e,420,467.25),F=c(e,.12,.128),M=c(e,360,400.5),v=E(e,.12,.128),P=E(e,360,400.5),H={1:m*(1*1/2+2*1/2),3:m*(2*1/2+3*1/2),5:m*(3*1/2+4*1/2)},Y={healAbility:b,beConversion:!0,befogState:!0,e1DefShred:!0,e2BeBuff:!0,e6ResShred:!0},w={befogState:!0,e1DefShred:!0,e2BeBuff:!0,e6ResShred:!0},r={healAbility:{id:"healAbility",formItem:"select",text:s("Text"),content:s("Content"),options:[{display:s("Skill"),value:T,label:s("Skill")},{display:s("Ult"),value:B,label:s("Ult")},{display:s("Talent"),value:b,label:s("Talent")}],fullWidth:!0},beConversion:{id:"beConversion",formItem:"switch",text:i("Content.beConversion.text"),content:i("Content.beConversion.content")},befogState:{id:"befogState",formItem:"switch",text:i("Content.befogState.text"),content:i("Content.befogState.content",{BefogVulnerability:h.precisionRound(100*p)})},e1DefShred:{id:"e1DefShred",formItem:"switch",text:i("Content.e1DefShred.text"),content:i("Content.e1DefShred.content"),disabled:e<1},e2BeBuff:{id:"e2BeBuff",formItem:"switch",text:i("Content.e2BeBuff.text"),content:i("Content.e2BeBuff.content"),disabled:e<2},e6ResShred:{id:"e6ResShred",formItem:"switch",text:i("Content.e6ResShred.text"),content:i("Content.e6ResShred.content"),disabled:e<6}},z={befogState:r.befogState,e1DefShred:r.e1DefShred,e2BeBuff:r.e2BeBuff,e6ResShred:r.e6ResShred};return{activeAbilities:[A.BASIC,A.SKILL,A.ULT,A.FUA],content:()=>Object.values(r),teammateContent:()=>Object.values(z),defaults:()=>Y,teammateDefaults:()=>w,initializeConfigurations:(t,a,n)=>{a.characterConditionals,t.SUMMONS.set(1,o)},precomputeEffects:(t,a,n)=>{const l=a.characterConditionals;t.BASIC_ATK_SCALING.buff(y,g),t.SKILL_ATK_SCALING.buff(K,u),t.FUA_ATK_SCALING.buff(G*2,o),t.ULT_ATK_SCALING.buff(D,f),t.BREAK_EFFICIENCY_BOOST.buff(e>=1?.5:0,I),t.FUA_ATK_SCALING.buff(e>=6&&l.e6ResShred?.5:0,_),t.BASIC_TOUGHNESS_DMG.buff(10,g),t.SKILL_TOUGHNESS_DMG.buff(10,u),t.ULT_TOUGHNESS_DMG.buff(20,f),t.FUA_TOUGHNESS_DMG.buff(10*2,o),t.FUA_TOUGHNESS_DMG.buff(e>=6?5:0,_),l.healAbility==T&&(t.HEAL_TYPE.set(T,u),t.HEAL_SCALING.buff(V,u),t.HEAL_FLAT.buff(k,u)),l.healAbility==B&&(t.HEAL_TYPE.set(B,f),t.HEAL_SCALING.buff(F,f),t.HEAL_FLAT.buff(M,f)),l.healAbility==b&&(t.HEAL_TYPE.set(b,o),t.HEAL_SCALING.buff(v,o),t.HEAL_FLAT.buff(P,o))},precomputeMutualEffects:(t,a,n)=>{const l=a.characterConditionals;t.a[d.ENEMY_WEAKNESS_BROKEN]&&t.DEF_PEN.buffTeam(e>=1&&l.e1DefShred?.2:0,I),X(t,tt,l.befogState?p:0,f,x.TEAM),t.BE.buffTeam(e>=2&&l.e2BeBuff?.4:0,R),t.RES_PEN.buffTeam(e>=6&&l.e6ResShred?.2:0,_)},finalizeCalculations:(t,a,n)=>{st(t,a,n,H[n.enemyCount]),ft(t)},gpuFinalizeCalculations:(t,a)=>ot(H[a.enemyCount])+ut(),dynamicConditionals:[{id:"LingshaConversionConditional",type:et.ABILITY,activation:at.CONTINUOUS,dependsOn:[L.BE],chainsTo:[L.ATK,L.OHB],condition:function(t,a,n){return!0},effect:function(t,a,n){if(!a.characterConditionals.beConversion)return;const S=a.conditionalState[this.id]||0,W=Math.min(.5,.25*t.a[d.BE])*n.baseATK,j=Math.min(.2,.1*t.a[d.BE]),q=Math.min(.5,.25*S)*n.baseATK,Q=Math.min(.2,.1*S);a.conditionalState[this.id]=t.a[d.BE];const Z=W-(S?q:0),$=j-(S?Q:0);t.ATK.buffDynamic(Z,U,a,n),t.OHB.buffDynamic($,U,a,n)},gpu:function(t,a){const n=t.characterConditionals;return nt(this,`
if (${it(n.beConversion)}) {
  return;
}

let stateValue: f32 = (*p_state).LingshaConversionConditional;

let buffValueAtk = min(0.50, 0.25 * x.BE) * baseATK;
let buffValueOhb = min(0.20, 0.10 * x.BE);

let stateBuffValueAtk = min(0.50, 0.25 * stateValue) * baseATK;
let stateBuffValueOhb = min(0.20, 0.10 * stateValue);

(*p_state).LingshaConversionConditional = x.BE;

let finalBuffAtk = buffValueAtk - select(0, stateBuffValueAtk, stateValue > 0);
let finalBuffOhb = buffValueOhb - select(0, stateBuffValueOhb, stateValue > 0);

(*p_x).ATK += finalBuffAtk;
(*p_x).OHB += finalBuffOhb;
`)}}]}};export{dt as default};
