import{T as I,S as O,d as n,U as i,A as R,a as y}from"./index-CUUFLx9X.js";import{f as h,h as m}from"./conditionalFinalizers-CYc97pLI.js";import"./vendor-PqicMVLa.js";const z=(l,_)=>{const a=I.wrappedFixedT(_).get(null,"conditionals","Common.HealAbility"),{basic:f,skill:o,ult:c}=y.SKILL_BASIC_3_ULT_TALENT_5,{SOURCE_BASIC:E,SOURCE_SKILL:e,SOURCE_ULT:s,SOURCE_TALENT:N,SOURCE_TECHNIQUE:F,SOURCE_TRACE:u,SOURCE_MEMO:G,SOURCE_E1:B,SOURCE_E2:g,SOURCE_E4:k,SOURCE_E6:C}=O.character("1105"),r=f(l,1,1.1),L=c(l,.138,.1472),b=c(l,368,409.4),T=o(l,.105,.112),H=o(l,280,311.5),U={healAbility:{id:"healAbility",formItem:"select",text:a("Text"),content:a("Content"),options:[{display:a("Skill"),value:n,label:a("Skill")},{display:a("Ult"),value:i,label:a("Ult")}],fullWidth:!0}},d={healAbility:i};return{activeAbilities:[R.BASIC],content:()=>Object.values(U),defaults:()=>d,precomputeEffects:(t,S,p)=>{const A=S.characterConditionals;return t.OHB.buff(.1,u),t.BASIC_ATK_SCALING.buff(r,E),t.BASIC_HP_SCALING.buff(l>=6?.4:0,C),t.BASIC_TOUGHNESS_DMG.buff(10,E),A.healAbility==n&&(t.HEAL_TYPE.set(n,e),t.HEAL_SCALING.buff(T,e),t.HEAL_FLAT.buff(H,e)),A.healAbility==i&&(t.HEAL_TYPE.set(i,s),t.HEAL_SCALING.buff(L,s),t.HEAL_FLAT.buff(b,s)),t},finalizeCalculations:(t,S,p)=>{h(t)},gpuFinalizeCalculations:()=>m()}};export{z as default};
