import{T as g,S as I,A as S,a as A}from"./index-CUUFLx9X.js";import"./vendor-PqicMVLa.js";const M=(r,B)=>{const a=g.wrappedFixedT(B).get(null,"conditionals","Characters.TrailblazerHarmony"),{basic:p,skill:T,ult:_}=A.SKILL_TALENT_3_ULT_BASIC_5,{SOURCE_BASIC:u,SOURCE_SKILL:o,SOURCE_ULT:i,SOURCE_TALENT:L,SOURCE_TECHNIQUE:U,SOURCE_TRACE:N,SOURCE_MEMO:K,SOURCE_E1:H,SOURCE_E2:b,SOURCE_E4:l,SOURCE_E6:x}=I.character("8006"),k=p(r,1,1.1),m=T(r,.5,.55),f=_(r,.3,.33),E=r>=6?6:4,O={1:1.6,3:1.4,5:1.2},R={skillHitsOnTarget:E,backupDancer:!0,superBreakDmg:!0,e2EnergyRegenBuff:!1},D={backupDancer:!0,superBreakDmg:!0,teammateBeValue:2},s={backupDancer:{id:"backupDancer",formItem:"switch",text:a("Content.backupDancer.text"),content:a("Content.backupDancer.content",{ultBeScaling:g.precisionRound(100*f)})},superBreakDmg:{id:"superBreakDmg",formItem:"switch",text:a("Content.superBreakDmg.text"),content:a("Content.superBreakDmg.content")},skillHitsOnTarget:{id:"skillHitsOnTarget",formItem:"slider",text:a("Content.skillHitsOnTarget.text"),content:a("Content.skillHitsOnTarget.content"),min:0,max:E},e2EnergyRegenBuff:{id:"e2EnergyRegenBuff",formItem:"switch",text:a("Content.e2EnergyRegenBuff.text"),content:a("Content.e2EnergyRegenBuff.content"),disabled:r<2}},d={backupDancer:s.backupDancer,superBreakDmg:s.superBreakDmg,teammateBeValue:{id:"teammateBeValue",formItem:"slider",text:a("TeammateContent.teammateBeValue.text"),content:a("TeammateContent.teammateBeValue.content"),min:0,max:4,percent:!0,disabled:r<4}};return{activeAbilities:[S.BASIC,S.SKILL],content:()=>Object.values(s),teammateContent:()=>Object.values(d),defaults:()=>R,teammateDefaults:()=>D,initializeConfigurations:(e,n,c)=>{n.characterConditionals.superBreakDmg&&e.ENEMY_WEAKNESS_BROKEN.config(1,i)},initializeTeammateConfigurations:(e,n,c)=>{n.characterConditionals.superBreakDmg&&e.ENEMY_WEAKNESS_BROKEN.config(1,i)},precomputeEffects:(e,n,c)=>{const t=n.characterConditionals;return e.ERR.buff(r>=2&&t.e2EnergyRegenBuff?.25:0,b),e.BASIC_ATK_SCALING.buff(k,u),e.SKILL_ATK_SCALING.buff(m,o),e.SKILL_ATK_SCALING.buff(t.skillHitsOnTarget*m,o),e.BASIC_TOUGHNESS_DMG.buff(10,u),e.SKILL_TOUGHNESS_DMG.buff(10*t.skillHitsOnTarget,o),e},precomputeMutualEffects:(e,n,c)=>{const t=n.characterConditionals;e.BE.buffTeam(t.backupDancer?f:0,i),e.SUPER_BREAK_MODIFIER.buffTeam(t.backupDancer&&t.superBreakDmg?O[c.enemyCount]:0,i)},precomputeTeammateEffects:(e,n,c)=>{const t=n.characterConditionals,C=r>=4?.15*t.teammateBeValue:0;e.BE.buffTeam(C,l),e.UNCONVERTIBLE_BE_BUFF.buffTeam(C,l)},finalizeCalculations:e=>{},gpuFinalizeCalculations:()=>""}};export{M as default};
