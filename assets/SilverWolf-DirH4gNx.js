import{T as l,S as g,A as S,a as p}from"./index-CUUFLx9X.js";import{c as G}from"./conditionalFinalizers-CYc97pLI.js";import"./vendor-PqicMVLa.js";const B=(f,_)=>{const t=l.wrappedFixedT(_).get(null,"conditionals","Characters.SilverWolf"),{basic:C,skill:r,ult:i,talent:E}=p.SKILL_TALENT_3_ULT_BASIC_5,{SOURCE_BASIC:o,SOURCE_SKILL:u,SOURCE_ULT:D,SOURCE_TALENT:R,SOURCE_TECHNIQUE:M,SOURCE_TRACE:m,SOURCE_MEMO:W,SOURCE_E1:K,SOURCE_E2:x,SOURCE_E4:T,SOURCE_E6:k}=g.character("1006"),b=r(f,.1,.105),d=E(f,.08,.088),c=i(f,.45,.468),A=C(f,1,1.1),L=r(f,1.96,2.156),I=i(f,3.8,4.104),U={skillWeaknessResShredDebuff:!1,skillResShredDebuff:!0,talentDefShredDebuff:!0,ultDefShredDebuff:!0,targetDebuffs:5},N={skillWeaknessResShredDebuff:!1,skillResShredDebuff:!0,talentDefShredDebuff:!0,ultDefShredDebuff:!0,targetDebuffs:5},n={skillResShredDebuff:{id:"skillResShredDebuff",formItem:"switch",text:t("Content.skillResShredDebuff.text"),content:t("Content.skillResShredDebuff.content",{skillResShredValue:l.precisionRound(100*b)})},skillWeaknessResShredDebuff:{id:"skillWeaknessResShredDebuff",formItem:"switch",text:t("Content.skillWeaknessResShredDebuff.text"),content:t("Content.skillWeaknessResShredDebuff.content",{implantChance:l.precisionRound(r(f,85,87))})},talentDefShredDebuff:{id:"talentDefShredDebuff",formItem:"switch",text:t("Content.talentDefShredDebuff.text"),content:t("Content.talentDefShredDebuff.content",{talentDefShredDebuffValue:l.precisionRound(100*d)})},ultDefShredDebuff:{id:"ultDefShredDebuff",formItem:"switch",text:t("Content.ultDefShredDebuff.text"),content:t("Content.ultDefShredDebuff.content",{ultDefShredValue:l.precisionRound(100*c)})},targetDebuffs:{id:"targetDebuffs",formItem:"slider",text:t("Content.targetDebuffs.text"),content:t("Content.targetDebuffs.content"),min:0,max:5}},O={skillResShredDebuff:n.skillResShredDebuff,skillWeaknessResShredDebuff:n.skillWeaknessResShredDebuff,talentDefShredDebuff:n.talentDefShredDebuff,ultDefShredDebuff:n.ultDefShredDebuff,targetDebuffs:n.targetDebuffs};return{activeAbilities:[S.BASIC,S.SKILL,S.ULT],content:()=>Object.values(n),teammateContent:()=>Object.values(O),defaults:()=>U,teammateDefaults:()=>N,precomputeEffects:(e,a,h)=>{const s=a.characterConditionals;return e.BASIC_ATK_SCALING.buff(A,o),e.SKILL_ATK_SCALING.buff(L,u),e.ULT_ATK_SCALING.buff(I,D),e.ULT_ADDITIONAL_DMG_SCALING.buff(f>=4?s.targetDebuffs*.2:0,T),e.ELEMENTAL_DMG.buff(f>=6?s.targetDebuffs*.2:0,k),e.BASIC_TOUGHNESS_DMG.buff(10,o),e.SKILL_TOUGHNESS_DMG.buff(20,u),e.ULT_TOUGHNESS_DMG.buff(30,D),e},precomputeMutualEffects:(e,a,h)=>{const s=a.characterConditionals;e.RES_PEN.buffTeam(s.skillWeaknessResShredDebuff?.2:0,u),e.RES_PEN.buffTeam(s.skillResShredDebuff?b:0,u),e.RES_PEN.buffTeam(s.skillResShredDebuff&&s.targetDebuffs>=3?.03:0,m),e.DEF_PEN.buffTeam(s.ultDefShredDebuff?c:0,D),e.DEF_PEN.buffTeam(s.talentDefShredDebuff?d:0,R)},finalizeCalculations:(e,a,h)=>{G(e)},gpuFinalizeCalculations:()=>"x.ULT_ADDITIONAL_DMG += x.ULT_ADDITIONAL_DMG_SCALING * x.ATK;"}};export{B as default};
