import{T as u,S as U,x as S,y as R,A as B,C as z,h as $,i as L,K as E,r as Y,s as W,a as j}from"./index-uKR0oAWy.js";import"./vendor-PqicMVLa.js";const ot=(o,D)=>{const n=u.wrappedFixedT(D).get(null,"conditionals","Characters.TrailblazerRemembrance"),s=u.wrappedFixedT(D).get(null,"conditionals","Common.BuffPriority"),{basic:A,skill:Q,ult:F,talent:p,memoSkill:d,memoTalent:b}=j.SKILL_TALENT_MEMO_TALENT_3_ULT_BASIC_MEMO_SKILL_5,{SOURCE_BASIC:g,SOURCE_SKILL:q,SOURCE_ULT:N,SOURCE_TALENT:_,SOURCE_TECHNIQUE:J,SOURCE_TRACE:X,SOURCE_MEMO:a,SOURCE_E1:y,SOURCE_E2:Z,SOURCE_E4:tt,SOURCE_E6:V}=U.character("8008"),h=A(o,1,1.1),G=F(o,2.4,2.64),H=p(o,.8,.86),P=p(o,640,688),O=d(o,.36,.396),I=d(o,.9,.99),m=b(o,.12,.132),l=b(o,.24,.264),M=d(o,.28,.3),v={buffPriority:S,memoSkillHits:4,teamCdBuff:!0,memsSupport:!1,energyTrueDmgValue:!1,e1CrBuff:!1,e4TrueDmgBoost:!1,e6UltCrBoost:!0},x={teamCdBuff:!0,memCDValue:2.5,memsSupport:!0,energyTrueDmgValue:!0,e1CrBuff:!0,e4TrueDmgBoost:!1},c={buffPriority:{id:"buffPriority",formItem:"select",text:s("Text"),content:s("Content"),options:[{display:s("Self"),value:S,label:s("Self")},{display:s("Memo"),value:R,label:s("Memo")}],fullWidth:!0},memoSkillHits:{id:"memoSkillHits",formItem:"slider",text:n("Content.memoSkillHits.text"),content:n("Content.memoSkillHits.content",{SingleScaling:u.precisionRound(O*100),AoeScaling:u.precisionRound(I*100)}),min:0,max:4},teamCdBuff:{id:"teamCdBuff",formItem:"switch",text:n("Content.teamCdBuff.text"),content:n("Content.teamCdBuff.content",{ScalingBuff:u.precisionRound(m*100),FlatBuff:u.precisionRound(l*100)})},memsSupport:{id:"memsSupport",formItem:"switch",text:n("Content.memsSupport.text"),content:n("Content.memsSupport.content",{TrueDmgScaling:u.precisionRound(M*100)})},energyTrueDmgValue:{id:"energyTrueDmgValue",formItem:"switch",text:n("Content.energyTrueDmgValue.text"),content:n("Content.energyTrueDmgValue.content")},e1CrBuff:{id:"e1CrBuff",formItem:"switch",text:n("Content.e1CrBuff.text"),content:n("Content.e1CrBuff.content"),disabled:o<1},e4TrueDmgBoost:{id:"e4TrueDmgBoost",formItem:"switch",text:n("Content.e4TrueDmgBoost.text"),content:n("Content.e4TrueDmgBoost.content"),disabled:o<4},e6UltCrBoost:{id:"e6UltCrBoost",formItem:"switch",text:n("Content.e6UltCrBoost.text"),content:n("Content.e6UltCrBoost.content"),disabled:o<6}},K={teamCdBuff:c.teamCdBuff,memCDValue:{id:"memCDValue",formItem:"slider",text:n("TeammateContent.memCDValue.text"),content:n("TeammateContent.memCDValue.content",{ScalingBuff:u.precisionRound(m*100),FlatBuff:u.precisionRound(l*100)}),min:0,max:4,percent:!0},memsSupport:c.memsSupport,energyTrueDmgValue:c.energyTrueDmgValue,e1CrBuff:c.e1CrBuff,e4TrueDmgBoost:c.e4TrueDmgBoost};return{activeAbilities:[B.BASIC,B.ULT,B.MEMO_SKILL],content:()=>Object.values(c),teammateContent:()=>Object.values(K),defaults:()=>v,teammateDefaults:()=>x,initializeConfigurations:(t,e,i)=>{const f=e.characterConditionals;t.SUMMONS.set(1,_),t.MEMOSPRITE.set(1,_),t.MEMO_BUFF_PRIORITY.set(f.buffPriority==S?S:R,_)},precomputeEffects:(t,e,i)=>{const f=e.characterConditionals;t.BASIC_ATK_SCALING.buff(h,g),t.MEMO_BASE_HP_SCALING.buff(H,a),t.MEMO_BASE_HP_FLAT.buff(P,a),t.MEMO_BASE_SPD_SCALING.buff(0,a),t.MEMO_BASE_SPD_FLAT.buff(130,a),t.MEMO_BASE_DEF_SCALING.buff(1,a),t.MEMO_BASE_ATK_SCALING.buff(1,a),t.m.MEMO_SKILL_ATK_SCALING.buff(f.memoSkillHits*O+I,a),t.m.ULT_ATK_SCALING.buff(G,a),t.m.ULT_CR_BOOST.buff(o>=6&&f.e6UltCrBoost?1:0,V),t.BASIC_TOUGHNESS_DMG.buff(10,g),t.ULT_TOUGHNESS_DMG.buff(20,N),t.m.MEMO_SKILL_TOUGHNESS_DMG.buff(15,a)},precomputeMutualEffects:(t,e,i)=>{const f=e.characterConditionals;if(f.memsSupport){const r=Math.min(.2,f.energyTrueDmgValue?Math.max((i.baseEnergy-100)/10,0)*2*.01:0),C=M+r+(o>=4&&f.e4TrueDmgBoost?.06:0);o>=1?(t.CR.buffDual(f.e1CrBuff?.1:0,y),t.TRUE_DMG_MODIFIER.buffDual(C,a)):t.TRUE_DMG_MODIFIER.buffSingle(C,a)}},precomputeTeammateEffects:(t,e,i)=>{const f=e.characterConditionals,r=f.teamCdBuff?m*f.memCDValue+l:0;t.CD.buffTeam(r,U.NONE),t.UNCONVERTIBLE_CD_BUFF.buffTeam(r,a)},finalizeCalculations:(t,e,i)=>{},gpuFinalizeCalculations:(t,e)=>"",dynamicConditionals:[{id:"TrailblazerRemembranceCdConditional",type:z.ABILITY,activation:$.CONTINUOUS,dependsOn:[L.CD],chainsTo:[L.CD],condition:function(t,e,i){return!0},effect:function(t,e,i){if(!e.characterConditionals.teamCdBuff)return;if(t.a[E.MEMOSPRITE])return this.effect(t.m,e,i);const r=e.conditionalState[this.id]||0,C=t.a[E.CD]-t.a[E.UNCONVERTIBLE_CD_BUFF],k=m*C+l,w=m*r+l;e.conditionalState[this.id]=C;const T=Math.max(0,k-(r?w:0));t.UNCONVERTIBLE_CD_BUFF.buff(T,a),t.CD.buffDynamic(T,a,e,i),t.summoner().CD.buffDynamic(T,a,e,i)},gpu:function(t,e){const i=t.characterConditionals;return Y(this,`
if (${W(i.teamCdBuff)}) {
  return;
}

let stateValue: f32 = (*p_state).TrailblazerRemembranceCdConditional;
let convertibleCdValue: f32 = (*p_m).CD - (*p_m).UNCONVERTIBLE_CD_BUFF;

var buffCD: f32 = ${m} * convertibleCdValue + ${l};
var stateBuffCD: f32 = ${m} * stateValue + ${l};

(*p_state).TrailblazerRemembranceCdConditional = (*p_m).CD;

let finalBuffCd = max(0, buffCD - select(0, stateBuffCD, stateValue > 0));
(*p_m).UNCONVERTIBLE_CD_BUFF += finalBuffCd;

(*p_m).CD += finalBuffCd;
(*p_x).CD += finalBuffCd;
`)}}]}};export{ot as default};
