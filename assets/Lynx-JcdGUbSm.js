import{T as m,S as M,d as E,U as C,N as A,A as w,C as h,h as U,i,j as y,k as I,w as O,a as z}from"./baseOptimizerWorker-D9p07sLo.js";import{f as $,h as j}from"./conditionalFinalizers-Dw6EAy4d.js";var et=(n,p)=>{const u=m.wrappedFixedT(p).get(null,"conditionals","Characters.Lynx"),o=m.wrappedFixedT(p).get(null,"conditionals","Common.HealAbility"),{basic:N,skill:r,ult:S,talent:_}=z.SKILL_BASIC_3_ULT_TALENT_5,{SOURCE_BASIC:B,SOURCE_SKILL:s,SOURCE_ULT:H,SOURCE_TALENT:T,SOURCE_TECHNIQUE:Q,SOURCE_TRACE:W,SOURCE_MEMO:q,SOURCE_E1:J,SOURCE_E2:X,SOURCE_E4:P,SOURCE_E6:b}=M.character("1110"),f=r(n,.075,.08),c=r(n,200,223),v=N(n,.5,.55),R=r(n,.12,.128),F=r(n,320,356),g=S(n,.135,.144),V=S(n,360,400.5),G=_(n,.036,.0384),Y=_(n,96,106.8),L=n>=4?.03:0,k={healAbility:{id:"healAbility",formItem:"select",text:o("Text"),content:o("Content"),options:[{display:o("Skill"),value:E,label:o("Skill")},{display:o("Ult"),value:C,label:o("Ult")},{display:o("Talent"),value:A,label:o("Talent")}],fullWidth:!0},skillBuff:{id:"skillBuff",formItem:"switch",text:u("Content.skillBuff.text"),content:u("Content.skillBuff.content",{skillHpPercentBuff:m.precisionRound(100*f),skillHpFlatBuff:c})}},K={skillBuff:k.skillBuff,teammateHPValue:{id:"teammateHPValue",formItem:"slider",text:u("TeammateContent.teammateHPValue.text"),content:u("TeammateContent.teammateHPValue.content",{skillHpPercentBuff:m.precisionRound(100*f),skillHpFlatBuff:c}),min:0,max:1e4}},x={healAbility:C,skillBuff:!0},D={skillBuff:!0,teammateHPValue:6e3};return{activeAbilities:[w.BASIC],content:()=>Object.values(k),teammateContent:()=>Object.values(K),defaults:()=>x,teammateDefaults:()=>D,precomputeEffects:(t,a,l)=>{const e=a.characterConditionals;return t.BASIC_HP_SCALING.buff(v,B),t.BASIC_TOUGHNESS_DMG.buff(10,B),e.healAbility==E&&(t.HEAL_TYPE.set(E,s),t.HEAL_SCALING.buff(R,s),t.HEAL_FLAT.buff(F,s)),e.healAbility==C&&(t.HEAL_TYPE.set(C,H),t.HEAL_SCALING.buff(g,H),t.HEAL_FLAT.buff(V,H)),e.healAbility==A&&(t.HEAL_TYPE.set(A,T),t.HEAL_SCALING.buff(G,T),t.HEAL_FLAT.buff(Y,T)),e.skillBuff&&(t.HP.buff(c,s),t.UNCONVERTIBLE_HP_BUFF.buff(c,s)),t},precomputeMutualEffects:(t,a,l)=>{const e=a.characterConditionals;t.RES.buffTeam(n>=6&&e.skillBuff?.3:0,b)},precomputeTeammateEffects:(t,a,l)=>{const e=a.characterConditionals;t.HP.buffTeam(e.skillBuff?f*e.teammateHPValue:0,s),t.HP.buffTeam(e.skillBuff?c:0,s),t.HP.buffTeam(n>=6&&e.skillBuff?.06*e.teammateHPValue:0,b);const d=n>=4&&e.skillBuff?.03*e.teammateHPValue:0;t.ATK.buffTeam(d,P)},finalizeCalculations:(t,a,l)=>{$(t)},gpuFinalizeCalculations:()=>j(),dynamicConditionals:[{id:"LynxHpConversionConditional",type:h.ABILITY,activation:U.CONTINUOUS,dependsOn:[i.HP],chainsTo:[i.HP],condition:function(t,a,l){return a.characterConditionals.skillBuff},effect:function(t,a,l){const e=f+(n>=6?.06:0);y(i.HP,i.HP,this,t,a,l,s,d=>d*e)},gpu:function(t,a){const l=t.characterConditionals,e=f+(n>=6?.06:0);return I(i.HP,i.HP,this,t,a,`${e} * convertibleValue`,`${O(l.skillBuff)}`)}},{id:"LynxHpAtkConversionConditional",type:h.ABILITY,activation:U.CONTINUOUS,dependsOn:[i.HP],chainsTo:[i.ATK],condition:function(t,a,l){return a.characterConditionals.skillBuff},effect:function(t,a,l){y(i.HP,i.ATK,this,t,a,l,P,e=>e*L)},gpu:function(t,a){const l=t.characterConditionals;return I(i.HP,i.ATK,this,t,a,`${L} * convertibleValue`,`${O(l.skillBuff)}`)}}]}};export{et as default};
