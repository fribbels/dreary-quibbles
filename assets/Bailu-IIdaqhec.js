import{T as C,S as y,d as m,U as f,N as S,A as N,a as x}from"./index-uKR0oAWy.js";import{f as F,h as G}from"./conditionalFinalizers-ChaoxVFF.js";import"./vendor-PqicMVLa.js";const Q=(e,g)=>{const l=C.wrappedFixedT(g).get(null,"conditionals","Characters.Bailu"),a=C.wrappedFixedT(g).get(null,"conditionals","Common.HealAbility"),{basic:_,skill:H,ult:E,talent:B}=x.SKILL_TALENT_3_ULT_BASIC_5,{SOURCE_BASIC:d,SOURCE_SKILL:u,SOURCE_ULT:o,SOURCE_TALENT:c,SOURCE_TECHNIQUE:P,SOURCE_TRACE:r,SOURCE_MEMO:v,SOURCE_E1:Y,SOURCE_E2:A,SOURCE_E4:T,SOURCE_E6:w}=y.character("1211"),p=_(e,1,1.1),b=H(e,.117,.1248),L=H(e,312,347.1),U=E(e,.135,.144),D=E(e,360,400.5),h=B(e,.054,.0576),k=B(e,144,160.2),R={healAbility:f,healingMaxHpBuff:!0,talentDmgReductionBuff:!0,e2UltHealingBuff:!0,e4SkillHealingDmgBuffStacks:0},I={healingMaxHpBuff:!0,talentDmgReductionBuff:!0,e4SkillHealingDmgBuffStacks:3},i={healAbility:{id:"healAbility",formItem:"select",text:a("Text"),content:a("Content"),options:[{display:a("Skill"),value:m,label:a("Skill")},{display:a("Ult"),value:f,label:a("Ult")},{display:a("Talent"),value:S,label:a("Talent")}],fullWidth:!0},healingMaxHpBuff:{id:"healingMaxHpBuff",formItem:"switch",text:l("Content.healingMaxHpBuff.text"),content:l("Content.healingMaxHpBuff.content")},talentDmgReductionBuff:{id:"talentDmgReductionBuff",formItem:"switch",text:l("Content.talentDmgReductionBuff.text"),content:l("Content.talentDmgReductionBuff.content")},e2UltHealingBuff:{id:"e2UltHealingBuff",formItem:"switch",text:l("Content.e2UltHealingBuff.text"),content:l("Content.e2UltHealingBuff.content"),disabled:e<2},e4SkillHealingDmgBuffStacks:{id:"e4SkillHealingDmgBuffStacks",formItem:"slider",text:l("Content.e4SkillHealingDmgBuffStacks.text"),content:l("Content.e4SkillHealingDmgBuffStacks.content"),min:0,max:3,disabled:e<4}},M={healingMaxHpBuff:i.healingMaxHpBuff,talentDmgReductionBuff:i.talentDmgReductionBuff,e4SkillHealingDmgBuffStacks:i.e4SkillHealingDmgBuffStacks};return{activeAbilities:[N.BASIC],content:()=>Object.values(i),teammateContent:()=>Object.values(M),defaults:()=>R,teammateDefaults:()=>I,precomputeEffects:(t,s,O)=>{const n=s.characterConditionals;return t.OHB.buff(e>=2&&n.e2UltHealingBuff?.15:0,A),t.BASIC_ATK_SCALING.buff(p,d),n.healAbility==m&&(t.HEAL_TYPE.set(m,u),t.HEAL_SCALING.buff(b,u),t.HEAL_FLAT.buff(L,u)),n.healAbility==f&&(t.HEAL_TYPE.set(f,o),t.HEAL_SCALING.buff(U,o),t.HEAL_FLAT.buff(D,o)),n.healAbility==S&&(t.HEAL_TYPE.set(S,c),t.HEAL_SCALING.buff(h,c),t.HEAL_FLAT.buff(k,c)),t.BASIC_TOUGHNESS_DMG.buff(10,d),t},precomputeMutualEffects:(t,s,O)=>{const n=s.characterConditionals;t.HP_P.buffTeam(n.healingMaxHpBuff?.1:0,r),t.ELEMENTAL_DMG.buffTeam(e>=4?n.e4SkillHealingDmgBuffStacks*.1:0,T),t.DMG_RED_MULTI.multiplyTeam(n.talentDmgReductionBuff?1-.1:1,r)},finalizeCalculations:t=>{F(t)},gpuFinalizeCalculations:()=>G()}};export{Q as default};
