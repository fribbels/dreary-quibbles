import{T as f,S as b,A as _,B as C,F as c,d as E,l as T,m as K,e as $,f as M,n as g,a as j,b as d}from"./index-CUUFLx9X.js";import"./vendor-PqicMVLa.js";const x=(n,B)=>{const s=f.wrappedFixedT(B).get(null,"conditionals","Characters.Topaz"),{basic:k,skill:D,ult:m,talent:N}=j.SKILL_BASIC_3_ULT_TALENT_5,{SOURCE_BASIC:O,SOURCE_SKILL:i,SOURCE_ULT:u,SOURCE_TALENT:S,SOURCE_TECHNIQUE:Q,SOURCE_TRACE:h,SOURCE_MEMO:W,SOURCE_E1:p,SOURCE_E2:Z,SOURCE_E4:q,SOURCE_E6:L}=b.character("1112"),y=D(n,.5,.55),l=m(n,1.5,1.65),r=m(n,.25,.275),z=k(n,1,1.1),F=D(n,1.5,1.65),R=N(n,1.5,1.65),I=d*(1*1/1),P=d*(1*1/7+2*1/7+3*1/7+4*1/7+5*1/7+6*1/7+7*1/7),U=d*(1*1/10+2*1/10+3*1/10+4*1/10+5*1/10+6*1/10+7*1/10+8*3/10),H={enemyProofOfDebtDebuff:!0,numbyEnhancedState:!0,e1DebtorStacks:2},v={enemyProofOfDebtDebuff:!0,e1DebtorStacks:2},A={enemyProofOfDebtDebuff:{id:"enemyProofOfDebtDebuff",formItem:"switch",text:s("Content.enemyProofOfDebtDebuff.text"),content:s("Content.enemyProofOfDebtDebuff.content",{proofOfDebtFuaVulnerability:f.precisionRound(100*y)})},numbyEnhancedState:{id:"numbyEnhancedState",formItem:"switch",text:s("Content.numbyEnhancedState.text"),content:s("Content.numbyEnhancedState.content",{enhancedStateFuaCdBoost:f.precisionRound(100*r),enhancedStateFuaScalingBoost:f.precisionRound(100*l)})},e1DebtorStacks:{id:"e1DebtorStacks",formItem:"slider",text:s("Content.e1DebtorStacks.text"),content:s("Content.e1DebtorStacks.content"),min:0,max:2,disabled:n<1}},Y={enemyProofOfDebtDebuff:A.enemyProofOfDebtDebuff,e1DebtorStacks:A.e1DebtorStacks};return{activeAbilities:[_.BASIC,_.SKILL,_.FUA],content:()=>Object.values(A),teammateContent:()=>Object.values(Y),defaults:()=>H,teammateDefaults:()=>v,initializeConfigurations:(t,a,o)=>{t.BASIC_DMG_TYPE.set(C|c,h),t.SKILL_DMG_TYPE.set(E|c,i),t.SUMMONS.set(1,S)},precomputeEffects:(t,a,o)=>{const e=a.characterConditionals;return T(t,E|c,e.numbyEnhancedState?r:0,u),K(t,E|c,n>=6?.1:0,L),T(t,C,e.numbyEnhancedState?-r:0,u),K(t,C,n>=6?-.1:0,L),t.BASIC_ATK_SCALING.buff(z,O),t.SKILL_ATK_SCALING.buff(F,i),t.SKILL_ATK_SCALING.buff(e.numbyEnhancedState?l:0,u),t.FUA_ATK_SCALING.buff(R,S),t.FUA_ATK_SCALING.buff(e.numbyEnhancedState?l:0,u),t.ELEMENTAL_DMG.buff(o.enemyElementalWeak?.15:0,h),t.BASIC_TOUGHNESS_DMG.buff(10,O),t.SKILL_TOUGHNESS_DMG.buff(20,i),t.FUA_TOUGHNESS_DMG.buff(20,S),t},precomputeMutualEffects:(t,a,o)=>{const e=a.characterConditionals;$(t,c,e.enemyProofOfDebtDebuff?y:0,i,M.TEAM),T(t,c,n>=1&&e.enemyProofOfDebtDebuff?.25*e.e1DebtorStacks:0,p,M.TEAM)},finalizeCalculations:(t,a,o)=>{const w=a.characterConditionals.numbyEnhancedState?U:P,V=g(t,a,o,I),G=g(t,a,o,w);t.BASIC_ATK_P_BOOST.buff(V,b.NONE),t.SKILL_ATK_P_BOOST.buff(G,b.NONE),t.FUA_ATK_P_BOOST.buff(G,b.NONE)},gpuFinalizeCalculations:(t,a)=>{const e=t.characterConditionals.numbyEnhancedState?U:P;return`
x.BASIC_ATK_P_BOOST += calculateAshblazingSetP(sets.TheAshblazingGrandDuke, action.setConditionals.valueTheAshblazingGrandDuke, ${I});
x.SKILL_ATK_P_BOOST += calculateAshblazingSetP(sets.TheAshblazingGrandDuke, action.setConditionals.valueTheAshblazingGrandDuke, ${e});
x.FUA_ATK_P_BOOST += calculateAshblazingSetP(sets.TheAshblazingGrandDuke, action.setConditionals.valueTheAshblazingGrandDuke, ${e});
      `}}};export{x as default};
