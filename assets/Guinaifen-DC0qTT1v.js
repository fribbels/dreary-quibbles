import{T as C,S as M,A as a,a as N}from"./index-CUUFLx9X.js";import"./vendor-PqicMVLa.js";const w=(e,d)=>{const n=C.wrappedFixedT(d).get(null,"conditionals","Characters.Guinaifen"),{basic:m,skill:u,ult:_,talent:b}=N.SKILL_BASIC_3_ULT_TALENT_5,{SOURCE_BASIC:i,SOURCE_SKILL:s,SOURCE_ULT:S,SOURCE_TALENT:T,SOURCE_TECHNIQUE:G,SOURCE_TRACE:r,SOURCE_MEMO:p,SOURCE_E1:D,SOURCE_E2:L,SOURCE_E4:K,SOURCE_E6:y}=M.character("1210"),E=b(e,.07,.076),f=e>=6?4:3,A=m(e,1,1.1),I=u(e,1.2,1.32),B=_(e,1.2,1.296),R=u(e,2.182,2.4),U={talentDebuffStacks:f,enemyBurned:!0,skillDot:!0,e1EffectResShred:!0,e2BurnMultiBoost:!0},O={talentDebuffStacks:f,e1EffectResShred:!0},c={talentDebuffStacks:{id:"talentDebuffStacks",formItem:"slider",text:n("Content.talentDebuffStacks.text"),content:n("Content.talentDebuffStacks.content",{talentDebuffDmgIncreaseValue:C.precisionRound(E),talentDebuffMax:f}),min:0,max:f},enemyBurned:{id:"enemyBurned",formItem:"switch",text:n("Content.enemyBurned.text"),content:n("Content.enemyBurned.content")},skillDot:{id:"skillDot",formItem:"switch",text:n("Content.skillDot.text"),content:n("Content.skillDot.content")},e1EffectResShred:{id:"e1EffectResShred",formItem:"switch",text:n("Content.e1EffectResShred.text"),content:n("Content.e1EffectResShred.content"),disabled:e<1},e2BurnMultiBoost:{id:"e2BurnMultiBoost",formItem:"switch",text:n("Content.e2BurnMultiBoost.text"),content:n("Content.e2BurnMultiBoost.content"),disabled:e<2}},k={talentDebuffStacks:c.talentDebuffStacks,e1EffectResShred:c.e1EffectResShred};return{activeAbilities:[a.BASIC,a.SKILL,a.ULT,a.DOT],content:()=>Object.values(c),teammateContent:()=>Object.values(k),defaults:()=>U,teammateDefaults:()=>O,precomputeEffects:(t,l,h)=>{const o=l.characterConditionals;return t.BASIC_ATK_SCALING.buff(A,i),t.SKILL_ATK_SCALING.buff(I,s),t.ULT_ATK_SCALING.buff(B,S),t.DOT_ATK_SCALING.buff(R,s),t.DOT_ATK_SCALING.buff(e>=2&&o.e2BurnMultiBoost?.4:0,L),t.ELEMENTAL_DMG.buff(o.enemyBurned?.2:0,r),t.BASIC_TOUGHNESS_DMG.buff(10,i),t.SKILL_TOUGHNESS_DMG.buff(20,s),t.ULT_TOUGHNESS_DMG.buff(20,S),t.DOT_CHANCE.set(o.skillDot?1:.8,o.skillDot?s:r),t},precomputeMutualEffects:(t,l,h)=>{const o=l.characterConditionals;t.VULNERABILITY.buffTeam(o.talentDebuffStacks*E,T),t.EFFECT_RES_PEN.buffTeam(e>=1&&o.e1EffectResShred?.1:0,D)},finalizeCalculations:t=>{},gpuFinalizeCalculations:()=>""}};export{w as default};
