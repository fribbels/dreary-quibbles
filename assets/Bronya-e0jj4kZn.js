import{T as o,S as L,A as _,g as N,C as y,h as x,i as s,j as M,k as F,w as G,a as w,B as q,b as v}from"./index-uKR0oAWy.js";import{b as K,g as P}from"./conditionalFinalizers-ChaoxVFF.js";import"./vendor-PqicMVLa.js";const J=(u,p)=>{const e=o.wrappedFixedT(p).get(null,"conditionals","Characters.Bronya"),{basic:h,skill:U,ult:C}=w.ULT_TALENT_3_SKILL_BASIC_5,{SOURCE_BASIC:S,SOURCE_SKILL:k,SOURCE_ULT:i,SOURCE_TALENT:z,SOURCE_TECHNIQUE:g,SOURCE_TRACE:m,SOURCE_MEMO:H,SOURCE_E1:j,SOURCE_E2:I,SOURCE_E4:d,SOURCE_E6:Y}=L.character("1101"),D=U(u,.66,.726),r=C(u,.55,.594),c=C(u,.16,.168),B=C(u,.2,.216),E=h(u,1,1.1),O=E*.8,T=v*(1*1/1),b={teamDmgBuff:!0,skillBuff:!0,ultBuff:!0,battleStartDefBuff:!1,techniqueBuff:!1,e2SkillSpdBuff:!1},R={...b,teammateCDValue:2.5},l={teamDmgBuff:{id:"teamDmgBuff",formItem:"switch",text:e("Content.teamDmgBuff.text"),content:e("Content.teamDmgBuff.content")},skillBuff:{id:"skillBuff",formItem:"switch",text:e("Content.skillBuff.text"),content:e("Content.skillBuff.content",{skillDmgBoostValue:o.precisionRound(100*D)})},ultBuff:{id:"ultBuff",formItem:"switch",text:e("Content.ultBuff.text"),content:e("Content.ultBuff.content",{ultAtkBoostValue:o.precisionRound(100*r),ultCdBoostValue:o.precisionRound(100*c),ultCdBoostBaseValue:o.precisionRound(100*B)})},battleStartDefBuff:{id:"battleStartDefBuff",formItem:"switch",text:e("Content.battleStartDefBuff.text"),content:e("Content.battleStartDefBuff.content")},techniqueBuff:{id:"techniqueBuff",formItem:"switch",text:e("Content.techniqueBuff.text"),content:e("Content.techniqueBuff.content")},e2SkillSpdBuff:{id:"e2SkillSpdBuff",formItem:"switch",text:e("Content.e2SkillSpdBuff.text"),content:e("Content.e2SkillSpdBuff.content"),disabled:u<2}},V={teamDmgBuff:l.teamDmgBuff,skillBuff:l.skillBuff,ultBuff:l.ultBuff,battleStartDefBuff:l.battleStartDefBuff,techniqueBuff:l.techniqueBuff,teammateCDValue:{id:"teammateCDValue",formItem:"slider",text:e("TeammateContent.teammateCDValue.text"),content:e("TeammateContent.teammateCDValue.content",{ultAtkBoostValue:o.precisionRound(100*r),ultCdBoostValue:o.precisionRound(100*c),ultCdBoostBaseValue:o.precisionRound(100*B)}),min:0,max:4,percent:!0},e2SkillSpdBuff:l.e2SkillSpdBuff};return{activeAbilities:[_.BASIC,_.FUA],content:()=>Object.values(l),teammateContent:()=>Object.values(V),defaults:()=>b,teammateDefaults:()=>R,precomputeEffects:(t,f,a)=>{const n=f.characterConditionals;N(t,q,1,m),t.BASIC_ATK_SCALING.buff(E,S),t.FUA_ATK_SCALING.buff(u>=4?O:0,d),n.ultBuff&&(t.CD.buff(B,i),t.UNCONVERTIBLE_CD_BUFF.buff(B,i)),t.BASIC_TOUGHNESS_DMG.buff(10,S),t.FUA_TOUGHNESS_DMG.buff(u>=4?10:0,d)},precomputeMutualEffects:(t,f,a)=>{const n=f.characterConditionals;t.DEF_P.buffTeam(n.battleStartDefBuff?.2:0,m),t.SPD_P.buffSingle(n.e2SkillSpdBuff?.3:0,I),t.ATK_P.buffTeam(n.techniqueBuff?.15:0,g),t.ATK_P.buffTeam(n.ultBuff?r:0,i),t.ELEMENTAL_DMG.buffTeam(n.teamDmgBuff?.1:0,m),t.ELEMENTAL_DMG.buffSingle(n.skillBuff?D:0,k)},precomputeTeammateEffects:(t,f,a)=>{const n=f.characterConditionals,A=n.ultBuff?c*n.teammateCDValue+B:0;t.CD.buffTeam(A,i),t.UNCONVERTIBLE_CD_BUFF.buffTeam(A,i)},finalizeCalculations:(t,f,a)=>{K(t,f,a,T)},gpuFinalizeCalculations:(t,f)=>P(T),dynamicConditionals:[{id:"BronyaCdConditional",type:y.ABILITY,activation:x.CONTINUOUS,dependsOn:[s.CD],chainsTo:[s.CD],condition:function(t,f,a){return f.characterConditionals.ultBuff},effect:function(t,f,a){M(s.CD,s.CD,this,t,f,a,i,n=>n*c)},gpu:function(t,f){const a=t.characterConditionals;return F(s.CD,s.CD,this,t,f,`${c} * convertibleValue`,`${G(a.ultBuff)}`)}}]}};export{J as default};
