import{T as c,S as y,A as f,K as G,a as g}from"./index-uKR0oAWy.js";import{c as K,d as R}from"./conditionalFinalizers-ChaoxVFF.js";import"./vendor-PqicMVLa.js";const F=(n,d)=>{const a=c.wrappedFixedT(d).get(null,"conditionals","Characters.Welt"),{basic:L,skill:D,ult:I,talent:T}=g.SKILL_BASIC_3_ULT_TALENT_5,{SOURCE_BASIC:m,SOURCE_SKILL:l,SOURCE_ULT:u,SOURCE_TALENT:s,SOURCE_TECHNIQUE:p,SOURCE_TRACE:E,SOURCE_MEMO:M,SOURCE_E1:r,SOURCE_E2:h,SOURCE_E4:w,SOURCE_E6:H}=y.character("1004"),_=n>=6?3:2,A=L(n,1,1.1),i=D(n,.72,.792),b=I(n,1.5,1.62),o=T(n,.6,.66),C={enemyDmgTakenDebuff:{id:"enemyDmgTakenDebuff",formItem:"switch",text:a("Content.enemyDmgTakenDebuff.text"),content:a("Content.enemyDmgTakenDebuff.content")},enemySlowed:{id:"enemySlowed",formItem:"switch",text:a("Content.enemySlowed.text"),content:a("Content.enemySlowed.content",{talentScaling:c.precisionRound(100*o)})},skillExtraHits:{id:"skillExtraHits",formItem:"slider",text:a("Content.skillExtraHits.text"),content:a("Content.skillExtraHits.content",{skillScaling:c.precisionRound(100*i)}),min:0,max:_},e1EnhancedState:{id:"e1EnhancedState",formItem:"switch",text:a("Content.e1EnhancedState.text"),content:a("Content.e1EnhancedState.content"),disabled:n<1}},N={enemyDmgTakenDebuff:C.enemyDmgTakenDebuff},O={enemySlowed:!0,enemyDmgTakenDebuff:!0,skillExtraHits:_,e1EnhancedState:!0},U={enemyDmgTakenDebuff:!0};return{activeAbilities:[f.BASIC,f.SKILL,f.ULT],content:()=>Object.values(C),teammateContent:()=>Object.values(N),defaults:()=>O,teammateDefaults:()=>U,precomputeEffects:(t,S,k)=>{const e=S.characterConditionals;return t.ELEMENTAL_DMG.buff(t.a[G.ENEMY_WEAKNESS_BROKEN]?.2:0,E),t.BASIC_ATK_SCALING.buff(A,m),t.SKILL_ATK_SCALING.buff(i,l),t.ULT_ATK_SCALING.buff(b,u),t.BASIC_ADDITIONAL_DMG_SCALING.buff(e.enemySlowed?o:0,s),t.SKILL_ADDITIONAL_DMG_SCALING.buff(e.enemySlowed?o:0,s),t.ULT_ADDITIONAL_DMG_SCALING.buff(e.enemySlowed?o:0,s),t.BASIC_ADDITIONAL_DMG_SCALING.buff(n>=1&&e.e1EnhancedState?.5*A:0,r),t.SKILL_ADDITIONAL_DMG_SCALING.buff(n>=1&&e.e1EnhancedState?.8*i:0,r),t.SKILL_ATK_SCALING.buff(e.skillExtraHits*i,l),t.BASIC_TOUGHNESS_DMG.buff(10,m),t.SKILL_TOUGHNESS_DMG.buff(10+10*e.skillExtraHits,l),t.ULT_TOUGHNESS_DMG.buff(20,u),t},precomputeMutualEffects:(t,S,k)=>{const e=S.characterConditionals;t.VULNERABILITY.buffTeam(e.enemyDmgTakenDebuff?.12:0,E)},finalizeCalculations:t=>{K(t)},gpuFinalizeCalculations:()=>R()}};export{F as default};
